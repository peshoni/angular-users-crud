// /* You can add global styles to this file, and also import other style files */

// html, body { height: 100%; }
// body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
@import "@angular/material/theming";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$frontend-primary: mat.define-palette(mat.$blue-palette, 800);
$frontend-accent: mat.define-palette(mat.$yellow-palette, 600);
// The warn palette is optional (defaults to red).
$frontend-warn: mat.define-palette(mat.$red-palette, 400);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$frontend-theme: mat.define-light-theme(
    (
        color: (
            primary: $frontend-primary,
            accent: $frontend-accent,
            warn: $frontend-warn,
        ),
    )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($frontend-theme);

/* You can add global styles to this file, and also import other style files */
$primary: mat-color($frontend-primary);
$warn: mat-color($frontend-warn);

$accent: mat.get-color-from-palette($frontend-theme, accent);
/* You can add global styles to this file, and also import other style files */

html,
body {
    height: 100%;
}
body {
    margin: 0;
    font-family: Roboto, "Helvetica Neue", sans-serif;
}

.mat-dialog-container {
    position: relative;
}

.progress-bar {
    position: absolute !important;
    top: 0;
    left: 0;
}

.no-data-row {
    text-align: center;
    height: 50px;
    font-size: 16px;
    color: mat.get-color-from-palette(mat.$deep-orange-palette, 300);
}

.actions {
    padding: 25px 0;
    position: relative;
    min-height: 40px;
}

.mat-tooltip {
    font-size: 14px !important;
    white-space: pre-line !important;
}

.mat-simple-snackbar {
    white-space: pre-line !important;
}

.mat-form-field-disabled {
    background-color: hsla(220, 7%, 82%, 0.369);
}
.mat-input-element:disabled,
.mat-form-field-type-mat-native-select.mat-form-field-disabled {
    color: black !important;
}

.mat-select-disabled .mat-select-value {
    color: black !important;
}

.mat-dialog-content {
    overflow: auto;
}

.main-progress-bar::-webkit-scrollbar {
    width: 1px;
}

.form-sector {
    border: solid 0.1px mat.get-color-from-palette(mat.$gray-palette, 300);
    border-radius: 1px;
    line-height: normal;
    padding: 5px;
    margin: 7px;
}

// mat-select styles:
.custom-mat-select {
    .mat-option-disabled {
        background: lightgray;
        font-weight: 700;
        font-size: initial;
        text-align: center !important;
    }
    .mat-option,
    .mat-select-value {
        font-size: initial;
        font-weight: 700;
        text-align: center !important;
    }
    .mat-option.mat-selected:hover:not([disabled]),
    .mat-option:hover:not([disabled]) {
        background-color: antiquewhite;
        font-size: initial;
        font-weight: 900;
        text-align: center;
        color: black !important;
    }
}
